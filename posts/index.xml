<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Wang3</title><link>https://yfsoftcom.github.io/posts/</link><description>Recent content in Posts on Wang3</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 23 Mar 2023 02:47:19 +0000</lastBuildDate><atom:link href="https://yfsoftcom.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Node中的Cluster</title><link>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84cluster/</link><pubDate>Thu, 23 Mar 2023 02:47:19 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84cluster/</guid><description>&lt;blockquote>
&lt;p>Node.js 通常采用 Single-threaded 的模式运行，即始终只有一个进程，也就是只能使用到计算机的一颗CPU，因此在选择服务器作为 Node 的运行环境时，CPU的主频是关键，而不是核心的数量。如何能够激发更多的核心参与运算，Cluster模块被设计了出来，使用 IPC 的基本通讯方式，在master进程中fork出若干的worker进程，彼此协调，共同完成任务。这个对于从未接触过分布式的开发者来说非常适合学习和理解。&lt;/p>
&lt;/blockquote>
&lt;h3 id="基本概念">基本概念&lt;/h3>
&lt;ul>
&lt;li>
&lt;p>&lt;code>IPC&lt;/code> (Inter-Process Communication) 一种非常通用的多进程通讯方式，可以实现不同程序之间的协作，举个简单的例子：&lt;code>cat ~/foo.txt | grep bar&lt;/code> 这样一个简单的linux指令就是一次 IPC 通信，中间的管道符用于将前面的程序的输出作为输入给到后面的程序，&lt;code>cat&lt;/code> 和 &lt;code>grep&lt;/code> 就是2个独立的进程。由此可见，现代计算机中普遍使用IPC，只是我们尚未察觉。不过IPC只限于一台机器内部通讯，区别于传统意义上的分布式。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Node中的Cluster可以监听本地的一个端口，并将请求转发到不同的 worker 内进行处理，每一个worker都是一个独立的进程，可以享用单独的CPU，在资源不够的情况下也会根其它的worker进程共享。Master进程内部有一个简单的负载机制，可以通过轮询或者饥饿模式（不知这么翻译是否妥当？）下面有原文的引用：&lt;/p>
&lt;blockquote>
&lt;p>The cluster module supports two methods of distributing incoming connections. The first one (and the default one on all platforms except Windows) is the round-robin approach, where the primary process listens on a port, accepts new connections and distributes them across the workers in a round-robin fashion, with some built-in smarts to avoid overloading a worker process. The second approach is where the primary process creates the listen socket and sends it to interested workers. The workers then accept incoming connections directly.&lt;/p>
&lt;/blockquote>
&lt;p>除了简单的转发请求之外，master和workers之间也可以进行通讯，相互之间发送指令，限于 master → all workers 以及 worker → master 之间，也就是 worker 之间无法直接通讯，master 也无法单独给某一个 worker 发信息，当然可以通过编码的方式来实现，方案也非常简单。&lt;/p>
&lt;/li>
&lt;/ul></description></item><item><title>Node中的EventLoop</title><link>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84eventloop/</link><pubDate>Sun, 19 Mar 2023 08:37:36 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84eventloop/</guid><description>&lt;blockquote>
&lt;p>Node.js 借助于V8的加持，在性能方面表现优异，在 single-thread 的基本架构下，可以达到NIO的惊人效果，这里必然存在一个超强的任务处理框架，那就是 Event Loop.&lt;/p>
&lt;/blockquote></description></item><item><title>Node中的OOM</title><link>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84oom/</link><pubDate>Mon, 06 Mar 2023 09:25:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84oom/</guid><description>&lt;blockquote>
&lt;p>Node.js 中的内存管理和垃圾回收是怎样的? 如何解决内存溢出的问题,以及如何找出导致OOM的根因?&lt;/p>
&lt;/blockquote>
&lt;h3 id="内存溢出会怎样">内存溢出会怎样？&lt;/h3>
&lt;p>于其它编程语言一样，Node内存溢出之后会抛出一个OOM的异常，并强行结束当前进程，导致服务不可用，通常的容器编排系统会重新启动一个新的实例，所以如果没有搜集日志并进行分析的话可能会忽略这类型的错误；通常日志会这样:&lt;/p></description></item><item><title>关于自己(三)</title><link>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1-%E4%B8%89/</link><pubDate>Fri, 04 Mar 2022 00:00:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1-%E4%B8%89/</guid><description>&lt;blockquote>
&lt;p>写这些只为总结总结自己，希望能从过去能回忆起来的一切来更好的发现自己。&lt;/p>
&lt;/blockquote>
&lt;h6 id="尝试突破">尝试突破&lt;/h6>
&lt;p>加入新公司之前，有一个Offer让我觉得世界真的很小，之前公司的面试官，在我入职之后不久便辞职创业了，时隔一年，创业不顺利，他重新出来工作，加入了这家公司，面试过程中恰巧碰到了，简单的聊了一下，有一种心心相惜的感觉。经过一番思想斗争，最终没有接受那份Offer，总觉得团队里应该有不同的声音和视角，我和他太像了。&lt;/p>
&lt;p>在选择公司的这些日子，每天上午会沿着外滩跑步，以理清思路，面对不同的Offer，从各个方面去了解团队，公司，行业，未来等。跑步和游泳是2个最能让人想清楚问题的方式，经过了半个月左右的考虑，我接受了现在公司的邀请。&lt;/p></description></item><item><title>Node中的Stream</title><link>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84stream/</link><pubDate>Thu, 03 Mar 2022 09:25:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/node%E4%B8%AD%E7%9A%84stream/</guid><description>&lt;blockquote>
&lt;p>Node.js 中的 Stream 模块是非常厉害，高效却不容易理解的模块。&lt;/p>
&lt;/blockquote>
&lt;p>常常因为不太理解而不太敢用。&lt;/p></description></item><item><title>关于解决类似「大众点评」字体反爬的方法</title><link>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E7%B1%BB%E4%BC%BC%E5%A4%A7%E4%BC%97%E7%82%B9%E8%AF%84%E5%AD%97%E4%BD%93%E5%8F%8D%E7%88%AC%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Fri, 11 Feb 2022 10:03:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%A7%A3%E5%86%B3%E7%B1%BB%E4%BC%BC%E5%A4%A7%E4%BC%97%E7%82%B9%E8%AF%84%E5%AD%97%E4%BD%93%E5%8F%8D%E7%88%AC%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;blockquote>
&lt;p>关于解决类似「大众点评」字体反爬的方法&lt;/p>
&lt;/blockquote>
&lt;p>反爬虫的常规方式通常包括: IP限流, UA 限制, Cookie 限制等。解决办法也比较常规，通过在 Header 中不断更换伪造的信息或者使用代理IP的方式来隐藏自己的爬虫。&lt;/p>
&lt;p>不过机智的反爬虫工程师从来没有停止思考，想出了通过字体文件来隐藏数据；&lt;/p>
&lt;p>大众点评中包含很多商家信息，是一个巨大的数据中心，对于电话和地址这些信息，需要进行反爬；正常用户能看到的信息，通过控制台分析和HTML源码分析得到的却是乱码。&lt;/p></description></item><item><title>Phaser3与微信小游戏的集成</title><link>https://yfsoftcom.github.io/posts/phaser3%E4%B8%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%9B%86%E6%88%90/</link><pubDate>Mon, 01 Nov 2021 23:53:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/phaser3%E4%B8%8E%E5%BE%AE%E4%BF%A1%E5%B0%8F%E6%B8%B8%E6%88%8F%E7%9A%84%E9%9B%86%E6%88%90/</guid><description>&lt;p>&lt;a href="https://phaser.io/phaser3">Phaser3&lt;/a> 是一个非常轻巧灵活且活跃的游戏框架，可以用来方便的开发2D游戏，在 &lt;a href="https://github.com/photonstorm/phaser">github&lt;/a> 上也有很多关注，开发团队也在持续维护。
对于我来说，比较关注它的易用性，本身并没有游戏开发经验，所以需要一个文档相当全面的框架来实现游戏逻辑。经过筛选，决定使用这个小型的2D引擎。
如果仅仅用它来开发web版，那可以开箱即用，迅速进入撸代码的环节，但是对于微信小游戏来说，本身提供的 windows 和 document 对象都是经过处理的，不能直接拿来用，所以需要做一个适配，google了一圈确实没有找到现成的东西，于是只能盲人摸象，根据自己的理解结合一些过时的文档资料进行整理和实践。终于找到了一个可行的方案。&lt;/p></description></item><item><title>关于自己(二)</title><link>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1-%E4%BA%8C/</link><pubDate>Tue, 17 Nov 2020 21:15:26 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1-%E4%BA%8C/</guid><description>&lt;blockquote>
&lt;p>写这些只为总结总结自己，希望能从过去能回忆起来的一切来更好的发现自己。&lt;/p>
&lt;/blockquote>
&lt;h6 id="创业失败">创业失败&lt;/h6>
&lt;p>创业重要的就是有销售意识，对于3个搞技术的人来说，太难了，空有一腔热血和技能，却不能转化为销售，就这么熬着；当时是代理了一家乳胶枕产品，然后开了淘宝店，设计商品页，产品包装等等；
最高峰，那年双十一卖了2w块钱的货，然后动用全部家庭成员去打包发货；慢慢一屋子的货，现在想来也蛮有趣的；&lt;/p>
&lt;p>当时为了推广也想了很多方法，直通车性价比真的低，后来还是通过hack的方式，在一个海淘论坛里面机器注册了若干小号，然后自动发帖，马甲号自动回复跟帖，虽然很low，但是确实带来了不少流量，也慢慢有了销量；&lt;/p></description></item><item><title>Convert RTSP to RTMP with FFMPEG</title><link>https://yfsoftcom.github.io/posts/convert-rtsp-to-rtmp-with-ffmpeg/</link><pubDate>Thu, 26 Jul 2018 09:13:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/convert-rtsp-to-rtmp-with-ffmpeg/</guid><description>&lt;p>本文主要介绍在浏览器上播放监控摄像头的方法。一些主流的监控摄像头都提供了 rtsp 流媒体协议，这种协议只能通过特定的播放器才能正常播放，想要在浏览器中播放，必须要通过转码；具体细节这里不一一列举，可以搜索&lt;code>rtsp&lt;/code> 转 &lt;code>rtmp&lt;/code> 的原理。&lt;/p></description></item><item><title>使用Python实现简单的单一神经元</title><link>https://yfsoftcom.github.io/posts/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%B8%80%E7%A5%9E%E7%BB%8F%E5%85%83/</link><pubDate>Mon, 16 Jul 2018 13:46:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E4%BD%BF%E7%94%A8python%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%8D%95%E4%B8%80%E7%A5%9E%E7%BB%8F%E5%85%83/</guid><description>&lt;blockquote>
&lt;p>本文是一个笔记帖，是关于 [实现简单神经网络] 的视频课程中使用到的源码整理。视频地址: &lt;a href="https://www.imooc.com/learn/813">https://www.imooc.com/learn/813&lt;/a>。&lt;/p>
&lt;/blockquote></description></item><item><title>Use Selenium In Python</title><link>https://yfsoftcom.github.io/posts/use-selenium-in-python/</link><pubDate>Mon, 09 Jul 2018 09:16:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/use-selenium-in-python/</guid><description>&lt;p>本文中主要分享一些关于 Windows 环境下使用 Selenium 来操作 IE11 的一些细节和问题。&lt;/p></description></item><item><title>北京之旅</title><link>https://yfsoftcom.github.io/posts/%E5%8C%97%E4%BA%AC%E4%B9%8B%E6%97%85/</link><pubDate>Fri, 23 Feb 2018 09:25:13 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%8C%97%E4%BA%AC%E4%B9%8B%E6%97%85/</guid><description>&lt;h4 id="满怀期待">满怀期待&lt;/h4>
&lt;p>做为首都，北京一直都让我们很自豪，无论如何都是要去看看的；平时也都挂在嘴上，找机会一定要去；过年了，没啥特殊安排，约上好友了了这个心愿。&lt;/p>
&lt;p>都说到了春运时期，北京是座空城，我们信了；从首都机场下了飞机，进3环的路上确实很顺畅，我们更坚信了这个说法；对接下来几天的行程也很期待，憧憬着用悠然自得的态度游览首都。&lt;/p></description></item><item><title>书</title><link>https://yfsoftcom.github.io/posts/books/</link><pubDate>Fri, 23 Jun 2017 15:08:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/books/</guid><description>&lt;p>关于自己看过和想看的一些书，整理一下，记录一下感悟。&lt;/p></description></item><item><title>&lt;最爽的一天></title><link>https://yfsoftcom.github.io/posts/%E6%9C%80%E7%88%BD%E7%9A%84%E4%B8%80%E5%A4%A9/</link><pubDate>Wed, 26 Apr 2017 09:08:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E6%9C%80%E7%88%BD%E7%9A%84%E4%B8%80%E5%A4%A9/</guid><description>&lt;p>&lt;img src="https://yfsoftcom.github.io/snaps/pasted-1498190367253.png" alt="最爽的一天">&lt;/p>
&lt;ul>
&lt;li>豆瓣链接: &lt;a href="https://movie.douban.com/subject/26680247/">https://movie.douban.com/subject/26680247/&lt;/a>&lt;/li>
&lt;li>知乎上的一些讨论 &lt;a href="https://www.zhihu.com/question/50419279">https://www.zhihu.com/question/50419279&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>python实现简单的图像识别</title><link>https://yfsoftcom.github.io/posts/python%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/</link><pubDate>Tue, 11 Apr 2017 08:53:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/python%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E7%9A%84%E5%9B%BE%E5%83%8F%E8%AF%86%E5%88%AB/</guid><description>&lt;p>&lt;em>这里说的图像识别只是简单的图片对比，并不是通过机器学习之后实现的人脸识别等。&lt;/em>&lt;/p>
&lt;h2 id="实现目标">实现目标&lt;/h2>
&lt;ul>
&lt;li>1.截取屏幕中的一块区域并保存到硬盘中&lt;/li>
&lt;li>2.将图片中的内容识别为数字&lt;/li>
&lt;li>3.调用鼠标和键盘模拟操作&lt;/li>
&lt;/ul></description></item><item><title>Ionic1.x 小总结</title><link>https://yfsoftcom.github.io/posts/ionic1-x-%E5%B0%8F%E6%80%BB%E7%BB%93/</link><pubDate>Wed, 22 Mar 2017 09:21:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/ionic1-x-%E5%B0%8F%E6%80%BB%E7%BB%93/</guid><description>&lt;p>一些小牢骚：&lt;/p>
&lt;blockquote>
&lt;p>在这个前端框架非常丰富的时代，选择一个合适的框架来做产品或做项目是一个相对纠结的决定；毕竟这些作品都还在发展，很多人甚至还没来得及使用它们就已经不在或者淘汰了，甚至原创团队都不得不做很大的&lt;code>break change&lt;/code>；用户在发展，需求在变化，前端这个新兴的产业很吸引人又很淘气；用&lt;code>java&lt;/code>就会用到&lt;code>spring&lt;/code>，这点已经毋庸置疑；而面对前段这么多的选择，似乎很难统一意见。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>最近结束了一个小项目，今天做一个小总结：&lt;/p></description></item><item><title>如何实现一个简单的插件扩展</title><link>https://yfsoftcom.github.io/posts/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%8F%92%E4%BB%B6%E6%89%A9%E5%B1%95/</link><pubDate>Tue, 21 Feb 2017 20:04:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E6%8F%92%E4%BB%B6%E6%89%A9%E5%B1%95/</guid><description>&lt;h3 id="为什么需要插件扩展">为什么需要插件扩展？&lt;/h3>
&lt;p>任何一个易用的系统都强调易用，易维护，模块化是nodejs的核心思想（显然并不是nodejs首先提出的）；nodejs有很多优秀的package都支持插件式开发：hexo(非常流行的静态博客生成工具),egg(ali团队推出的企业级开发框架),etc&amp;hellip;&lt;/p></description></item><item><title>封装Angularjs Websocket并支持Promise</title><link>https://yfsoftcom.github.io/posts/%E5%B0%81%E8%A3%85angularjs-websocket%E5%B9%B6%E6%94%AF%E6%8C%81promise/</link><pubDate>Fri, 17 Feb 2017 15:15:00 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%B0%81%E8%A3%85angularjs-websocket%E5%B9%B6%E6%94%AF%E6%8C%81promise/</guid><description>&lt;p>最近完成了一个ionic项目，服务端是用的websocket，之前还没应用过ws来做前后端的交互；经过这个项目的实践，将这段代码进行封装，并做简要的说明。&lt;/p></description></item><item><title>如何使用一个简单的Range控件</title><link>https://yfsoftcom.github.io/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84range%E6%8E%A7%E4%BB%B6/</link><pubDate>Sun, 08 Jan 2017 11:54:10 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84range%E6%8E%A7%E4%BB%B6/</guid><description>&lt;blockquote>
&lt;p>Range控件是HTML5中新增的控件，很常用，尤其是手机端。&lt;/p>
&lt;/blockquote></description></item><item><title>关于自己(一)</title><link>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1-%E4%B8%80/</link><pubDate>Sun, 09 Oct 2016 14:46:26 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/%E5%85%B3%E4%BA%8E%E8%87%AA%E5%B7%B1-%E4%B8%80/</guid><description>&lt;blockquote>
&lt;p>写这些只为总结总结自己，希望能从过去能回忆起来的一切来更好的发现自己。&lt;/p>
&lt;/blockquote>
&lt;h6 id="平凡出生">平凡出生&lt;/h6>
&lt;p>1988.1.23 出生于江苏省盐城市的一个普通的乡村，没有兄弟姐妹，4岁随父母安顿在江苏扬州的一个县：江都（如今已隶属扬州的一个区）。&lt;/p>
&lt;h6 id="资质平庸">资质平庸&lt;/h6>
&lt;p>从小学习一般，偏科严重（只是文科差得没法看了而已，理科并没有好到哪里去），父母还是很希望能考个靠谱的大学，改善一下自己的命运，高中没有好好学，还动了歪脑经，练习了体育特长生，其实身体素质着实一般；最终念了个普通的大专院校。&lt;/p></description></item><item><title>ES6笔记(Day 1)</title><link>https://yfsoftcom.github.io/posts/es6%E7%AC%94%E8%AE%B0-day-1/</link><pubDate>Sun, 09 Oct 2016 14:30:12 +0000</pubDate><guid>https://yfsoftcom.github.io/posts/es6%E7%AC%94%E8%AE%B0-day-1/</guid><description>&lt;hr>
&lt;h4 id="学习目标">学习目标&lt;/h4>
&lt;ul>
&lt;li>掌握如何定义变量&lt;/li>
&lt;li>掌握解构的内部机制&lt;/li>
&lt;li>掌握字符串模版&lt;/li>
&lt;/ul></description></item></channel></rss>